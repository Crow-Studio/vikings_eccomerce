name: Deploy Main App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Sync code to VPS including dotfiles
      - name: Sync to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "./"
          target: "/var/www/vikings"
          strip_components: 0 # ensures hidden files like .env.production are copied

      # Run deployment scripts on VPS
      - name: Run deployment scripts on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script_stop: true
          script: |
            set -e

            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            cd /var/www/vikings

            # Load environment variables from .env.production
            # This trims any spaces around '=' so even "KEY = value" works
            if [ -f /var/www/vikings/.env.production ]; then
              export $(grep -v '^#' /var/www/vikings/.env.production \
                       | sed 's/ *= */=/' \
                       | xargs)
            else
              echo "⚠️  .env.production not found in /var/www/vikings"
            fi

            # Set NODE_ENV to production
            export NODE_ENV=production

            # Install pnpm & pm2 if not installed
            for pkg in pnpm pm2; do
              command -v $pkg &> /dev/null || npm install -g $pkg
            done

            # Install dependencies
            pnpm install --frozen-lockfile

            # Run Migrations
            pnpm run db:migrate

            # Build Application
            pnpm run build

            # # Start / Restart PM2
            pm2 reload ecosystem.config.cjs --env production || pm2 start ecosystem.config.cjs --env production
            pm2 save
